// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  email     String?   @unique
  phone     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Invoice   Invoice[]
}

model Invoice {
  id           Int           @id @default(autoincrement())
  amount       Float
  pending      Boolean       @default(true)
  purchaseDate DateTime
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  customerId   Int
  customer     Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  InvoiceItem  InvoiceItem[]
}

model InvoiceItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  unitPrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  invoiceId Int
  Invoice   Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  price         Float
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  InvoiceItem   InvoiceItem[]
  StockMovement StockMovement[]
}

enum StockReason {
  COMPRA
  VENDA
  AJUSTE_POSITIVO
  AJUSTE_NEGATIVO
  OUTRO
}

model StockMovement {
  id        Int         @id @default(autoincrement())
  productId Int
  Product   Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  date      DateTime
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  reason    StockReason
}
